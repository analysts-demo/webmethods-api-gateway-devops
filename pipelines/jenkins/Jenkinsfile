/*
 This pipeline depicts how an API(project) that is present 
 in VCS can be promoted to an API Gateway Prod environment  after testing it in the 
 API Gateway QA environment.
 The API(project) is imported in the QA environment and after running tests it is promoted
 to the Prod using the Promotion mangement APIs.
 The details of the API Gateway QA environment is provied in the jenkins.properties and the 
 API Gateway Prod environment is created as a stage in the API Gateway QA environment
 The project to be built is provided in jenkins.properties.
 This pipeline by default runs on the master and uses the library methods present in bin/common.lib  
*/

node ("Built-In"){

    def GIT_LOCATION = "https://github.com/analysts-demo/webmethods-api-gateway-devops.git"

	def workspace = pwd()
	def script_location = "${workspace}/apigateway"
	def COMMON_LIB_LOCATION = "${script_location}/bin"
	def TEST_LOCATION = "${script_location}/tests"
	def API_TOKEN = "56d2e254d12e4753aea5fa6af5e0839952d10ff780314d72629cf782ccdb6504"
	def test_results = "true"
	

	stage('Checkout') {
		 checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'apigateway']], submoduleCfg: [], userRemoteConfigs: [[url: "${GIT_LOCATION}"]]])
	}
	

    load "${script_location}/pipelines/jenkins/jenkins.properties"
	
	stage ('Functional Tests') {
		withEnv(["api_project=${api_project}","apigateway_qa_url=${apigateway_qa_url}","apigateway_qa_username=${apigateway_qa_username}","apigateway_qa_password=${apigateway_qa_password}","bin_loc=${COMMON_LIB_LOCATION}"]) {
			dir("$bin_loc"){		
			  sh '''
				  chmod -R a+x .
				 ./gateway_import_export_utils.sh --import --api_name $api_project --apigateway_url $apigateway_qa_url 
			   '''
			 }
		  }
	}

	stage('Performance tests ') {
		withEnv(["tests_loc=${TEST_LOCATION}/performance-tests","api_token=${API_TOKEN}","url="${apigateway_qa_url}/gateway/Product%20API/manufacturer"]) {

			dir("$tests_loc"){		
			  sh '''
				 k6 run -e API_URL=$url performanceTests.js
			   '''
			 }
		  }
	}
	
	stage('Rollout') {
	    if(test_results == "false"){
		  echo "Tests have failed. Not promoting."
		}
		else{
			withEnv(["api_project=${api_project}","apigateway_qa_url=${apigateway_qa_url}","bin_loc=${COMMON_LIB_LOCATION}","script_location=${script_location}"]) {
					dir("$bin_loc"){		
						  sh " source $bin_loc/common.lib; promote_api $api_project \"${script_location}/tests/environment/qa_environment.json\" \"httpInvokeUrl=$apigateway_qa_url;buildNumber=\"${currentBuild.number}\"\""
						 }
					  }
	    }
	}
   
}